?MAKE:d_conf_access allowfile denyfile d_conf_checkhost : cat contains Setvar Myread Oldconfig Getfile
?MAKE:	-pick add $@ %<
?S:d_conf_access:
?S:	Should we check the allow and deny files for access control.
?S:.
?S:allowfile:
?S:	Shell sym for allowfile filename
?S:.
?S:denyfile:
?S:	Shell sym for denyfile filename
?S:.
?S:d_conf_checkhost:
?S:	Defined if you enabled host address checking
?S:.
?C:CONF_ALLOWFILE:
?C:	Defined to be the filename that cgiwrap checks to see what users are
?C:	allowed to use cgiwrap scripts.
?C:.
?C:CONF_DENYFILE:
?C:	Defined to be the filename that cgiwrap checks to see what users are
?C:	not allowed to use cgiwrap scripts.
?C:.
?C:CONF_ACCESS:
?C:	Defined if you have enabled access control checking of the allow/deny
?C:	files.
?C:.
?C:CONF_CHECKHOST:
?C:	Defined if you have enabled host address checking in the allow/deny
?C:	files.
?C:.
?H:#$d_conf_access CONF_ALLOWFILE "$allowfile"		/**/
?H:#$d_conf_access CONF_DENYFILE "$denyfile"		/**/
?H:#$d_conf_access CONF_ACCESS	/**/
?H:#$d_conf_checkhost CONF_CHECKHOST	/**/
?H:.


$cat <<'EOM'

The next question(s) deal with whether you want CGIwrap to restrict it's 
usage only to userids that are listed in a configuration file.  

CGIwrap uses the same method for determining access as cron. If the allow
file exists, then the userid must be listed in it in order to use CGIwrap.
If the deny file exists, then the userid must NOT be listed in it to use
CGIwrap. 

I recommend enabling this option, and just creating an empty deny file to
start out. That way, you can cut someone off if they abuse the service. 

An option for restricting access further includes checking the remote host
address against a range of IP addresses. This allows you to restrict cgi
usage by a particular user to being access from only certain hosts. This
is usefule for a situation where you only want your users making CGI
scripts that can be accessed from your domain. 

The file format is one userid per line, unless you enable host checking.

EOM

case "$d_conf_access" in
define)	dflt='y' ;;
*)	dflt='n' 
esac

rp="Check access control files?"
. ./myread

case "$ans" in
y|Y) val="$define" ;;
*) val="$undef" ;;
esac

set d_conf_access
eval $setvar



case "$d_conf_access" in
define) 
$cat <<'EOM'

Now I need to know the paths where you will be storing the allow
and deny files.

EOM

#
# Get the allow file name
#

	case "$allowfile" in
	'')	dflt="/usr/adm/cgiwrap.allow" ;;
	*)	dflt="$allowfile" ;;
	esac

	rp="Location of allow file?"
	fn="f~+"
        . ./getfile

	allowfile="$ans"

#
# Get the deny file name
#
	case "$denyfile" in
	'')	dflt="/usr/adm/cgiwrap.deny" ;;
	*)	dflt="$denyfile" ;;
	esac

	rp="Location of deny file?"
	fn="f~+"
        . ./getfile

	denyfile="$ans"

;;

*) ;;
esac


case "$d_conf_access" in
define)

$cat <<'EOM'

If you want to enable checking the remote host against a list of specified
host addresses, answer yes to the following question. If you do enable
this, the formats allowed by the allow/deny files are: 

username
 or
username@subnet/mask
 or
username@subnet1/mask1,subnet2/mask2,...,subnetn/maskn

e.g
myuser@1.2.3.4/255.255.255.255,2.3.0.0/255.255.0.0

would allow myuser's CGI scripts to run from the host 1.2.3.4 or any hosts
whose IP address starts 2.3. (e.g. 2.3.56.78) if in the allow file or deny
access from those hosts if in the deny file.

EOM

	case "$d_conf_checkhost" in
	define)   dflt='y' ;;
	*)        dflt='n'
	esac

	rp="Check Host Address?"
	. ./myread

	case "$ans" in
	y|Y) val="$define" ;;
	*) val="$undef" ;;
	esac
	
	set d_conf_checkhost
	eval $setvar
	
	;;

*)
	d_conf_checkhost="undef"
esac

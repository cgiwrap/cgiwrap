?MAKE:d_conf_userdirfile userdirfile : cat contains Setvar Myread Oldconfig 
?MAKE:	-pick add $@ %<
?S:d_conf_userdirfile:
?S:	Should we rewrite user directories according to a config file
?S:.
?S:userdirfile:
?S:	Shell sym for userdirfile filename
?S:.
?C:CONF_USERDIRFILE:
?C:	Defined to be the filename that cgiwrap processes to rewrite user 
?C:	directory paths.
?C:.
?H:#$d_conf_userdirfile CONF_USERDIRFILE "$userdirfile"		/**/
?H:.


$cat <<'EOM'

To allow for sites that don't run CGI scripts out of user directories, 
or have special needs, such as hosts performing virtual-server type
services, CGIwrap can read a configuration file that allows the path
to directories to be rewritten.

This way, the user's home directory can be located in one place, and the
cgi-bin directory can be located in a completely different location. 

Unless you absolutely need this, I would suggest NOT enabling this option, 
as it will slow cgiwrap down considerably.

EOM

case "$d_conf_userdirfile" in
define)   dflt='y' ;;
*)        dflt='n'
esac

rp="Process User Directory Rewrite File?"
. ./myread

case "$ans" in
y|Y) val="$define" ;;
*) val="$undef" ;;
esac

set d_conf_userdirfile
eval $setvar



case "$d_conf_userdirfile" in
define) 

$cat <<'EOM'

Now I need to know the path to the file that contains the list
of user directories. Note, you only need to include userids in this
file that need to be rewritten. Otherwise, CGIwrap will just use the
directory that is listed in the passwd file.

The file format is line based, with each line having the format:

userid:directory

For example, if the user's home directory was "/users/fred", and you had
"fred:/web/users/freds-cgi-scripts" in the userdir file - then cgiwrap 
would look for cgi scripts in "/web/users/freds-cgi-scripts" instead of 
in "/users/fred/public_html/cgi-bin".

EOM

	case "$userdirfile" in
	'')	dflt="/usr/adm/cgiwrap.userdir" ;;
	*)	dflt="$userdirfile" ;;
	esac

	rp="What file contains the list of user cgi dirs?"
	. ./myread

	userdirfile="$ans"

;;

*) ;;
esac


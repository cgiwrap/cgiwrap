?MAKE:d_conf_allowfile allowfile d_conf_denyfile denyfile d_conf_checkhost : cat contains Setvar Myread Oldconfig 
?MAKE:	-pick add $@ %<
?S:d_conf_allowfile:
?S:	Should we check an allow file
?S:.
?S:allowfile:
?S:	Shell sym for allowfile filename
?S:.
?S:d_conf_denyfile:
?S:	Should we check a deny file
?S:.
?S:denyfile:
?S:	Shell sym for denyfile filename
?S:.
?S:d_conf_checkhost:
?S:	Defined if you enabled host address checking
?S:.
?C:CONF_ALLOWFILE:
?C:	Defined to be the filename that cgiwrap checks to see what users are
?C:	allowed to use cgiwrap scripts.
?C:.
?C:CONF_DENYFILE:
?C:	Defined to be the filename that cgiwrap checks to see what users are
?C:	not allowed to use cgiwrap scripts.
?C:.
?C:CONF_CHECKHOST:
?C:	Defined if you have enabled host address checking in the allow/deny
?C:	files.
?C:.
?H:#$d_conf_allowfile CONF_ALLOWFILE "$allowfile"		/**/
?H:#$d_conf_denyfile CONF_DENYFILE "$denyfile"		/**/
?H:#$d_conf_checkhost CONF_CHECKHOST	/**/
?H:.


$cat <<'EOM'

The next question(s) deal with whether you want CGIwrap to restrict it's 
usage only to userids that are listed in a configuration file.  I 
generally enable checking the deny file, and then set up an empty deny 
file. This way, if for some reason I need to temporarily disable a user, 
I can just add them to the deny file without any fuss.

There are two optional files, an allow file or a deny file. If you enable 
the option to check the allow file, only users listed in the allow file 
will be allowed to use CGIwrap. If you enable the option to check the 
deny file, all userids except those that are listed in the deny file will be
allowed to use CGIwrap. 

An option for restricting access further includes checking the remote host
address against a range of IP addresses. This allows you to restrict cgi 
usage by a particular user to only certain hosts.

The file format is one userid per line, unless you enable host checking.

EOM

case "$d_conf_allowfile" in
define)   dflt='y' ;;
undef)    dflt='n' ;;
*)        dflt='n'
esac

rp="Check Allow File?"
. ./myread

case "$ans" in
y|Y) val="$define" ;;
*) val="$undef" ;;
esac

set d_conf_allowfile
eval $setvar



case "$d_conf_allowfile" in
define) 
d_conf_denyfile="$undef"
$cat <<'EOM'

Now I need to know what file contains the list of userids that are to be
allowed to use CGIwrap. 

EOM


#
# Get the log file name
#

	case "$allowfile" in
	'')	dflt="/usr/adm/cgiwrap.allow" ;;
	*)	dflt="$allowfile" ;;
	esac

	rp="What file contains the list of userids to allow?"
	. ./myread

	allowfile="$ans"

;;

*) ;;
esac




case "$d_conf_allowfile" in
undef)

	case "$d_conf_denyfile" in
	define)   dflt='y' ;;
	*)        dflt='n'
	esac

	rp="Check Deny File?"
	. ./myread
	
	case "$ans" in
	y|Y) val="$define" ;;
	*) val="$undef" ;;
	esac
	
	set d_conf_denyfile
	eval $setvar



	case "$d_conf_denyfile" in
	define)


$cat <<'EOM'

Now I need to know what file contains the list of userids that are to be
denied use of CGIwrap. 

EOM

		case "$denyfile" in
		'')	dflt="/usr/adm/cgiwrap.deny" ;;
		*)	dflt="$denyfile" ;;
		esac

		rp="What file contains the list of userids to deny?"
		. ./myread

		denyfile="$ans"

	;;

	*) ;;
	esac

;;

*) ;;
esac



case "$d_conf_allowfile$d_conf_denyfile" in
undefdefine|defineundef|definedefine)

$cat <<'EOM'

If you want to enable checking the remote host against a list of specified
host addresses, answer yes to the following question. If you do enable
this, the formats allowed by the allow/deny files are: 

username
 or
username@subnet/mask
 or
username@subnet1/mask1,subnet2/mask2,...,subnetn/maskn

e.g
myuser@1.2.3.4/255.255.255.255,2.3.0.0/255.255.0.0

would allow myuser's CGI scripts to run from the host 1.2.3.4 or any hosts
whose IP address starts 2.3. (e.g. 2.3.56.78) if in the allow file or deny
access from those hosts if in the deny file.

EOM

	case "$d_conf_checkhost" in
	define)   dflt='y' ;;
	*)        dflt='n'
	esac

	rp="Check Host Address?"
	. ./myread

	case "$ans" in
	y|Y) val="$define" ;;
	*) val="$undef" ;;
	esac
	
	set d_conf_checkhost
	eval $setvar
	
	;;

*)
	d_conf_checkhost="undef"
esac
